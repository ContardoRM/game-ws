name: Docker Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set IMAGE_TAG
        id: set_image_tag
        run: echo "IMAGE_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Build Docker Image
        env:
          IMAGE_TAG: ${GITHUB_SHA::8}
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/game-ws:${{ env.IMAGE_TAG }} .
          docker images
          sed -i "s/tag: .*/tag: ${{ env.IMAGE_TAG }}/" ./k8s/helm/values.yaml
          cat ./k8s/helm/values.yaml

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/game-ws:${{ env.IMAGE_TAG }}

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker run \
            --rm \
            -e SONAR_HOST_URL="https://sonarcloud.io" \
            -e SONAR_LOGIN="${{ secrets.SONAR_TOKEN }}" \
            -v "$(pwd):/usr/src" \
            sonarsource/sonar-scanner-cli

      - name: Set up kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}
          version: '1.21.0'

#      - name: Run kubectl apply
#        run: |
#          kubectl apply -f k8s/
#          kubectl get po

      - name: Download Helm script
        run: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3

      - name: Install Helm
        run: bash get_helm.sh

      - name: Deploy with Helm
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          chmod +x update_version.sh
          NEW_VERSION=$(./update_version.sh)
          kubectl version --client
          helm version
          helm repo add stable https://charts.helm.sh/stable
          helm repo update
          helm upgrade game-ws ./k8s/helm/
          kubectl get po
          helm ls

      - name: Get branch name
        id: branch
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Notify Slack on success
        if: success()
        uses: rtCamp/action-slack-notify@v3
        with:
          slack_webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: general
          message: |
            El flujo de trabajo de GitHub se ejecutó con éxito en la rama ${{ env.BRANCH }}.
            Más detalles en el [enlace](https://github.com/usuario/repositorio/actions/runs/${{ github.run_id }}).
          status: "success"
          author_name: "GitHub Actions"
          author_icon: "https://github.githubassets.com/favicon.ico"

      - name: Notify Slack on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v3
        with:
          slack_webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: general
          message: |
            El flujo de trabajo de GitHub ha fallado en la rama ${{ env.BRANCH }}.
            Más detalles en el [enlace](https://github.com/usuario/repositorio/actions/runs/${{ github.run_id }}).
          status: "failure"
          author_name: "GitHub Actions"
          author_icon: "https://github.githubassets.com/favicon.ico"